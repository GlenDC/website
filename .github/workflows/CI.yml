name: CI

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: stable
  RUST_TOOLCHAIN_MSRV: 1.75.0

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: check
        run: |
          cargo check --all --all-targets
      - name: clippy
        run: |
          cargo clippy --all --all-targets
      - name: rustfmt
        run: |
          cargo fmt --all -- --check

  check-all-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: check
        run: |
          cargo check --all --all-targets --all-features
      - name: clippy
        run: |
          cargo clippy --all --all-targets --all-features
      - name: rustfmt
        run: |
          cargo fmt --all -- --check

  test:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test  --workspace

  test-all-features:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all-features --workspace

  test-macos:
    needs: [check, check-all-features]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test  --workspace

  test-ignored:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test  --workspace -- --ignored

  test-ignored-macos:
    needs: [check, check-all-features]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test  --workspace -- --ignored

  test-examples:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        run: cargo test  --examples --workspace

  test-examples-macos:
    needs: [check, check-all-features]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        run: cargo test  --examples --workspace

  cargo-hack:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - name: install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack check
        run: cargo hack check --each-feature --no-dev-deps --workspace

  dependencies-are-sorted:
    needs: [check, check-all-features]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-sort
        run: |
          cargo install cargo-sort
      - name: Check dependency tables
        working-directory: .
        run: |
          cargo sort --workspace --grouped --check

  deploy-www:
    runs-on: ubuntu-latest
    needs:
      - test
      - test-all-features
      - test-examples
      - test-ignored
      - cargo-hack
      - dependencies-are-sorted
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          cd rama-fp/infra/deployments/fp-h1
          flyctl deploy --remote-only
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
